#:schema https://mise.jdx.dev/schema/mise.json
min_version = "2024.1.1"

[env]
# Add Maven and Java to PATH
_.path = ["{{config_root}}/bin", "./target"]
JAVA_HOME = "{{mise_prefix}}/java"
MAVEN_HOME = "{{mise_prefix}}/maven" 
MAVEN_OPTS = "-Xmx1024m -XX:MaxPermSize=256m"

[tools]
# Core development tools
java = "openjdk-8"
maven = "latest"
git = "latest"

# Container and virtualization
docker = "latest"
vagrant = "latest"

# Cloud tools  
awscli = "latest"

# Utility tools
jq = "latest"
curl = "latest"

# Task configuration
[task_config]
includes = ["tasks/*.toml"]

# Built-in tasks
[tasks.install-all]
description = "Install all development tools"
run = [
  "echo '🚀 Installing development environment...'",
  "mise install",
  "echo '✅ All tools installed successfully!'"
]

[tasks.status]
description = "Show status of all tools"
run = [
  "echo '=== Development Environment Status ==='",
  "echo ''",
  "mise ls --current",
  "echo ''",
  "echo '=== Tool Versions ==='",
  "java -version 2>&1 | head -1 || echo '❌ Java not available'",
  "mvn -version 2>&1 | head -1 || echo '❌ Maven not available'", 
  "git --version || echo '❌ Git not available'",
  "docker --version 2>/dev/null || echo '❌ Docker not running'",
  "vagrant --version 2>/dev/null || echo '❌ Vagrant not available'",
  "aws --version 2>&1 | head -1 || echo '❌ AWS CLI not available'",
  "echo '================================='"
]

[tasks.java-info]
description = "Show Java environment information"
run = [
  "echo '☕ Java Environment'",
  "echo '=================='",
  "echo 'JAVA_HOME: $JAVA_HOME'",
  "echo 'Java Version:'",
  "java -version",
  "echo ''",
  "echo 'Java Compiler:'", 
  "javac -version"
]

[tasks.maven-info]
description = "Show Maven environment information"  
run = [
  "echo '📦 Maven Environment'",
  "echo '==================='",
  "echo 'MAVEN_HOME: $MAVEN_HOME'",
  "echo 'MAVEN_OPTS: $MAVEN_OPTS'",
  "echo 'Maven Version:'",
  "mvn -version"
]

[tasks.create-java-project]
description = "Create a new Maven Java project"
run = [
  "echo '📁 Creating Maven project...'",
  "mvn archetype:generate \\",
  "  -DgroupId=com.example.app \\", 
  "  -DartifactId=my-java-app \\",
  "  -DarchetypeArtifactId=maven-archetype-quickstart \\",
  "  -DinteractiveMode=false",
  "echo '✅ Project created: my-java-app/'",
  "echo 'Next steps:'",
  "echo '  cd my-java-app'",
  "echo '  mise run build'"
]

[tasks.build]
description = "Build the Maven project"
run = [
  "echo '🔨 Building Maven project...'",
  "mvn clean compile",
  "echo '✅ Build completed'"
]

[tasks.test]
description = "Run Maven tests"
run = [
  "echo '🧪 Running tests...'",
  "mvn test"
]

[tasks.package]
description = "Package the application"
run = [
  "echo '📦 Packaging application...'",
  "mvn package",
  "echo '✅ Package created in target/ directory'"
]

[tasks.clean]
description = "Clean Maven build artifacts"
run = [
  "echo '🧹 Cleaning build artifacts...'",
  "mvn clean",
  "echo '✅ Clean completed'"
]

[tasks.docker-build]
description = "Build Docker image"
run = [
  "echo '🐳 Building Docker image...'",
  "if [ ! -f Dockerfile ]; then",
  "  echo 'Creating Dockerfile...'",
  "  cat > Dockerfile << 'EOF'",
  "FROM openjdk:8-jdk-alpine",
  "VOLUME /tmp", 
  "COPY target/*.jar app.jar",
  "ENTRYPOINT [\"java\",\"-jar\",\"/app.jar\"]",
  "EOF",
  "fi",
  "docker build -t my-java-app:latest .",
  "echo '✅ Docker image built: my-java-app:latest'"
]

[tasks.docker-run]
description = "Run Docker container"
run = [
  "echo '🐳 Running Docker container...'",
  "docker run --rm my-java-app:latest"
]

[tasks.vagrant-init]
description = "Initialize Vagrant configuration"
run = [
  "echo '📦 Creating Vagrantfile...'",
  "if [ ! -f Vagrantfile ]; then",
  "  cat > Vagrantfile << 'EOF'",
  "Vagrant.configure(\"2\") do |config|",
  "  config.vm.box = \"ubuntu/focal64\"",
  "  config.vm.network \"private_network\", ip: \"192.168.56.10\"",
  "  config.vm.provider \"virtualbox\" do |vb|",
  "    vb.memory = \"2048\"", 
  "    vb.cpus = 2",
  "  end",
  "  ",
  "  config.vm.provision \"shell\", inline: <<-SHELL",
  "    apt-get update",
  "    apt-get install -y openjdk-8-jdk maven docker.io",
  "    systemctl start docker",
  "    systemctl enable docker", 
  "    usermod -aG docker vagrant",
  "  SHELL",
  "end",
  "EOF",
  "  echo '✅ Vagrantfile created'",
  "else",
  "  echo '⚠️  Vagrantfile already exists'",
  "fi"
]

[tasks.vagrant-up]
description = "Start Vagrant VM"
run = [
  "echo '🚀 Starting Vagrant VM...'",
  "vagrant up"
]

[tasks.vagrant-ssh]
description = "SSH into Vagrant VM"
run = [
  "echo '🔗 Connecting to Vagrant VM...'",
  "vagrant ssh"
]

[tasks.vagrant-down]
description = "Stop Vagrant VM"
run = [
  "echo '🛑 Stopping Vagrant VM...'",
  "vagrant halt"
]

[tasks.vagrant-destroy]
description = "Destroy Vagrant VM"
run = [
  "echo '💥 Destroying Vagrant VM...'",
  "vagrant destroy -f"
]

[tasks.aws-configure]
description = "Configure AWS CLI"
run = [
  "echo '☁️ Configuring AWS CLI...'",
  "aws configure"
]

[tasks.aws-info]
description = "Show AWS configuration"
run = [
  "echo '☁️ AWS Configuration'",
  "echo '==================='",
  "aws configure list",
  "echo ''",
  "echo 'Current AWS Identity:'",
  "aws sts get-caller-identity 2>/dev/null || echo '❌ Not configured or no access'"
]

[tasks.git-init]
description = "Initialize Git repository"
run = [
  "echo '📝 Initializing Git repository...'",
  "git init",
  "if [ ! -f .gitignore ]; then",
  "  cat > .gitignore << 'EOF'",
  "target/",
  ".vagrant/",
  "*.log",
  ".DS_Store", 
  "Thumbs.db",
  ".idea/",
  "*.iml",
  ".vscode/",
  ".mise.lock",
  "EOF",
  "  echo '✅ .gitignore created'",
  "fi",
  "echo '✅ Git repository initialized'"
]

[tasks.dev-setup]
description = "Complete development environment setup"
run = [
  "echo '🏗️  Setting up complete development environment...'",
  "echo ''",
  "mise run install-all",
  "echo ''",
  "mise run git-init", 
  "echo ''",
  "mise run vagrant-init",
  "echo ''",
  "mise run status",
  "echo ''",
  "echo '🎉 Development environment setup complete!'",
  "echo ''",
  "echo '📋 Next steps:'",
  "echo '  mise run create-java-project  # Create new Java project'",
  "echo '  mise run aws-configure        # Configure AWS CLI'",
  "echo '  mise run vagrant-up           # Start development VM'",
  "echo '  mise run docker-build         # Build Docker image'"
]

[tasks.help]
description = "Show available tasks"
run = [
  "echo '🔧 Available Development Tasks'",
  "echo '============================='",
  "mise tasks"
]
